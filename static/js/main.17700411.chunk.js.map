{"version":3,"sources":["Components/ProjectCard.js","ProjectListMetadata.js","Home.js","Resume.js","Components/myForm.js","CoverLetter.js","Components/Navbar.js","Components/Footer.js","ProjectPage.js","NonePage.js","App.js","reportWebVitals.js","index.js"],"names":["ProjectCard","props","cardEnter","path","pageLink","history","push","console","log","state","e","this","setState","Col","Card","bg","hovered","onClick","bind","style","cursor","onMouseOver","cardHover","onMouseLeave","cardLeave","Img","variant","src","ImgLink","Body","Title","Subtitle","Text","className","Time","Component","withRouter","project_data","styled","h1","Explain","p","Emphasis","span","Home","document","title","Container","Row","class","id","xs","md","map","_","idx","text","img_url","pathname","pageID","query","subtitle","time","Resume","href","target","rel","textAlign","myForm","changeHandler","event","nam","name","val","value","submitHandler","company_name","position_name","location","loading","fetchLatexURL","a","url","fetch","then","result","json","data","window","open","wildSubmitHandler","fetchWildLatexURL","Form","Group","controlId","Label","Control","type","placeholder","onChange","Check","label","Button","Spinner","display","animation","size","role","CoverLetter","Wrapper","section","Navbar","fluid","Nav","activeKey","Item","Link","eventKey","disabled","Footer","ProjectPage","contentsData","properties","what_it_is","why_it_is_interesting","figs","docs","replace","redirectURL","oldURL","rearrangeArray","array_name","array_url","res","i","length","fetchContents","myHeaders","Headers","requestOptions","method","headers","redirect","response","JSON","parse","Name","plain_text","rich_text","figures_name_arr","Figs","multi_select","obj","figures_url_arr","Fig_url","figs_arr","docs_name_arr","Docs","docs_url_arr","Docs_url","docs_arr","catch","error","Contents","Figure","Image","alt","Caption","Project_cfd","App","Fragment","basename","exact","component","NonePage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.17700411.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport { Card , Col } from 'react-bootstrap';\n\nclass ProjectCard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            \"hovered\": false\n        }\n    }\n\n    cardHover(e) {\n        this.setState({\"hovered\":true})\n    }\n\n    cardLeave(e) {\n        this.setState({ \"hovered\": false })\n    }\n\n    \n\n    cardEnter = () => {\n        let path = this.props.pageLink;\n        if (path != null) { this.props.history.push(path) } else { console.log(this.props)};\n        \n    }\n\n    render() { \n        return (  \n            <Col>\n                <Card bg={this.state.hovered ? \"light\" : \"\"} onClick={this.cardEnter.bind(this)} style={{ cursor: 'help' }} onMouseOver={this.cardHover.bind(this)} onMouseLeave={this.cardLeave.bind(this)}>\n                <Card.Img variant=\"top\" src={this.props.ImgLink}/>\n                <Card.Body>\n                    <Card.Title>{this.props.Title}</Card.Title>\n                    <Card.Subtitle>{this.props.Subtitle}</Card.Subtitle>\n                    <Card.Text>\n                        {this.props.Text}\n                    </Card.Text>\n                        <Card.Text>\n                            <small className=\"text-muted\">{this.props.Time}</small>\n                        </Card.Text>\n                </Card.Body>\n            </Card>\n            </Col>\n        );\n    }\n}\n \nexport default withRouter(ProjectCard);","const project_data = [\n    {\n        \"title\":\"Research Assistant - Turbulent Boundary Layer Research Group\",\n        \"text\": \"This experience mainly consists two projects: retreating dynamic stall behaviour with morphing airfoil and rotor blade acoustics under unstatic thrust. \",\n        \"img_url\": \"https://d3xdgu3rc17hb.cloudfront.net/IMG/laser_piv.jpg\",\n        \"pageLink\":\"/projects/ra\",\n        \"time\":\"2019 - 2021\",\n        \"pageID\": \"390ccb0ab0cc4f969b157ce1ea496b75\"\n        \n    },\n    {\n        \"title\": \"Laser Induced Breakdown in CFD\",\n        \"text\": \"An one semester long introductory research experience in a Computational Fluid Dynamics Research group. Working with Dr. Andrea Alberti on the physical model of laser induced breakdown with the DNS CFD infrastructure in the group.\",\n        \"img_url\": \"https://d3xdgu3rc17hb.cloudfront.net/IMG/laser_induced_breakdown_CFD.png\",\n        \"pageLink\": \"/projects/cfd\",\n        \"time\": \"2019\",\n        \"pageID\": \"8798d85854ca45549459997685815bd1\"\n    },\n    {\n        \"title\": \"Gaming Assets Markets Tracking Webstie\",\n        \"text\": \"An full stack development experience of mine. With the backend crawling, data washing, and database managing, the website tracks some CS:GO market exchanges and the steam community market for price comparison and arbitrage opportunities seeking based on the price disparity and the overall liquidity.\",\n        \"img_url\": \"https://d3xdgu3rc17hb.cloudfront.net/IMG/steam_community_market.png\",\n        \"pageLink\": \"/projects/tracker\",\n        \"time\": \"2020\",\n        \"pageID\": \"632f4f9059bf4f5e9feb70e84c182e82\"\n    },\n    {\n        \"title\": \"IoT Watches Application - Machine Learning Heartbeat Classifier\",\n        \"text\": \"A thousand emulated IoT watches clients was created and connected with our cloud infrastructure by MQTT protocol. The watches pass in heartbeat data, and the cloud analyser perform real time classification using a machine learning model (open sourse) and send back the result to the watch clients. The performance and reliability was analyzed and discussed.\",\n        \"img_url\": \"https://d3xdgu3rc17hb.cloudfront.net/IMG/iot_watch.png\",\n        \"pageLink\": \"/projects/watches\",\n        \"time\": \"2020\",\n        \"pageID\": \"1e252567a5d6449dab9324fda35b267d\"\n    },\n    {\n        \"title\": \"Optimization of an Unpowered Glider with One Controled Flap\",\n        \"text\": \"A control algorithm of the state space model based on the equations of motion of the modeled glider was implemented on a unpowered glider in a 2D simulation. One set of runs was performed with different lqr settings to find the optimized (the longest gliding distance) controller. \",\n        \"img_url\": \"https://d3xdgu3rc17hb.cloudfront.net/IMG/glider.png\",\n        \"pageLink\": \"/projects/glider\",\n        \"time\": \"2019\",\n        \"pageID\": \"524f1ae86a4944249e2a27b232a74a8c\"\n    },\n    {\n        \"title\": \"Mobile Casino Android App (Class Toy Project)\",\n        \"text\": \"This is a very rudimentary Android Casino App developed that people can play Single-Player poker and blackjack. Google ADs was implemented.\",\n        \"img_url\": \"https://d3xdgu3rc17hb.cloudfront.net/IMG/mobile_casino.jpg\",\n        \"pageLink\": \"/projects/casino\",\n        \"time\": \"2018\",\n        \"pageID\": \"f9872caef54040f09fbf72a4cf123285\"\n    },\n    {\n        \"title\": \"State Space Model Control of a Two-wheeled Robot in Simulation\",\n        \"text\": \"A control algorithm of the state space model based on the equations of motion of a modeled two-wheeled robot was implemented in a 2D simulation. A random path of 120 meter was generated for testing the performance and robutness of the implemented algorithm. The algorithm was optimized for the time of completion and sucsess rate.\",\n        \"img_url\": \"https://d3xdgu3rc17hb.cloudfront.net/IMG/two_wheel.png\",\n        \"pageLink\": \"/projects/two_wheeled\",\n        \"time\": \"2019\",\n        \"pageID\": \"37bbd2cef5594642a5e29dd68e9cb10f\"\n    },\n    {\n        \"title\": \"Cover Letter Generator using OpenAI's GPT-2 natural-language generation engine\",\n        \"text\": \"It's accessible on the right top corner of this site. Generate cover letere based on a few inputs like company name, position name, location, and if it's an intern position using OpenAI's NLP engine.\",\n        \"img_url\": \"https://d3xdgu3rc17hb.cloudfront.net/IMG/gpt2_cover.png\",\n        \"pageLink\": \"/projects/gpt2\",\n        \"time\": \"2021\",\n        \"pageID\": \"f3bcdf9ae3994e09b7202545f2fca654\"\n    },\n    {\n        \"title\": \"IoT Advanced Driver Assistance System Application - Computer Vision 'Car'\",\n        \"text\": \"This is an mock advanced drive assistance system with machine vision based on a TensorFlow Lite deployed to a Raspberry Pi, sensors connceted to a microcontroller, and a CAN bus managing all the communications between them.\",\n        \"img_url\": \"https://d3xdgu3rc17hb.cloudfront.net/IMG/car_iot.jpg\",\n        \"pageLink\": \"/projects/iot_car\",\n        \"time\": \"2020\",\n        \"pageID\": \"487f42bb9c174da7af19e556c97c18f9\"\n    }\n\n]\n\nexport { project_data };","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport ProjectCard from './Components/ProjectCard';\n\nimport { project_data } from './ProjectListMetadata.js'\n\nconst Title = styled.h1`\n  font-size: 2em;\n  text-align: center;\n`;\n\nconst Explain = styled.p`\n    padding: 1em 0.5em;\n    color: gray;\n`;\n\nconst Emphasis = styled.span`\n    color: black;\n    font-weight: bold;\n`;\n\nclass Home extends Component {\n    componentDidMount() {\n        document.title = \"Projects\";\n    }\n\n    render() {\n        return (\n            <Container>\n                <Row className=\"justify-content-md-center\">\n                    <Title>\n                        <p class=\"text-center\" id=\"wrong-test\">Projects List</p>\n                    </Title>\n                    <Col xs={7}>\n                        <Explain>\n                            A few projects of mine I feel worth sharing. For each of them, I'll briefly talk about <Emphasis>what it is</Emphasis>, and <Emphasis>why it's interesting</Emphasis>. I won't touch much on the technical side, but most of them will include a paper or report (if it has one).\n                        </Explain>\n                        <Row xs={1} md={2} className=\"g-4\">\n                            {project_data.map((_, idx) => (\n                                <ProjectCard Title={project_data[idx].title}\n                                    Text={project_data[idx].text}\n                                    ImgLink={project_data[idx].img_url}\n                                    pageLink={{ pathname: '/projects/' + project_data[idx].pageID, query: { pageID: project_data[idx].pageID } }}\n                                    Subtitle={project_data[idx].subtitle}\n                                    Time={project_data[idx].time}\n                                    pageID={project_data[idx].pageID}\n                                />\n                            ))}\n                        </Row>\n\n                    </Col>\n                </Row>\n            </Container>\n\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst Title = styled.h1`\n  font-size: 2em;\n  text-align: center;\n`;\n\nclass Resume extends Component {\n\n\n    componentDidMount() {\n        document.title = \"Résumé\"\n    }\n    render() {\n\n        return (\n            <Container>\n                <Row className=\"justify-content-md-center\">\n                    <Title>\n                        <p class=\"text-center\" id=\"wrong-test\">Résumé</p>\n                    </Title>\n                    <Col xs={8}>\n                        <div class=\"list-group\">\n                            <a href=\"https://d3xdgu3rc17hb.cloudfront.net/cvs/Resume_2021_soft.pdf\" target=\"_blank\" rel=\"noreferrer\" class=\"list-group-item list-group-item-action\">Résumé Software Emphasis</a>\n                            <a href=\"https://d3xdgu3rc17hb.cloudfront.net/cvs/Resume_2021_hard.pdf\" target=\"_blank\" rel=\"noreferrer\" class=\"list-group-item list-group-item-action\">Résumé Hardware Emphasis</a>\n                            <a href=\"https://d3xdgu3rc17hb.cloudfront.net/cvs/Resume_2021_soft_zh.pdf\" target=\"_blank\" rel=\"noreferrer\" class=\"list-group-item list-group-item-action\">中文简历（软件倾向）</a>\n                            <a href=\"https://d3xdgu3rc17hb.cloudfront.net/cvs/Resume_2021_hard_zh.pdf\" target=\"_blank\" rel=\"noreferrer\" class=\"list-group-item list-group-item-action\">中文简历（硬件倾向）</a>\n                        </div>\n                        <br/>\n                        <div style={{ textAlign: \"right\" }}>\n                            <text>Last Update: 2022/03/02</text>\n                        </div>\n                    </Col>\n\n\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default Resume;","import React, { Component } from 'react';\nimport { Form, Button, Spinner } from \"react-bootstrap\";\n\nclass myForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            \"company_name\" : \"\",\n            \"position_name\" : \"\",\n            \"location\" : \"\",\n            \"loading\": false,\n            \"url_open\":\"\"\n        }\n    }\n\n    changeHandler = (event) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n        this.setState({[nam]:val});\n    }\n\n    submitHandler = () => {\n        if (this.state.company_name === \"\" || this.state.position_name === \"\" || this.state.location ===\"\" ) {\n            console.log(\"SUBMIT\")\n        } else {\n            this.setState({loading : true})\n            this.fetchLatexURL()   \n        }\n    }\n\n    fetchLatexURL = async () => {\n        let url = \"https://hbiaxoevyh.execute-api.us-east-2.amazonaws.com/Working/playwithS3?company_name=\" + this.state.company_name + \n        \"&position_name=\" + this.state.position_name + \"&location=\" + this.state.location\n        fetch(url)\n            .then(result => result.json())\n            .then(data => {\n                window.open(data, \"_blank\")\n                this.setState({ loading: false })\n            })\n    }\n\n    wildSubmitHandler = () => {\n        if (this.state.company_name === \"\" || this.state.position_name === \"\" || this.state.location === \"\") {\n            console.log(\"SUBMIT\")\n        } else {\n            this.setState({ loading: true })\n            this.fetchWildLatexURL()\n        }\n    }\n\n    fetchWildLatexURL = async () => {\n        let url = \"https://5zyy05dxf3.execute-api.us-east-2.amazonaws.com/Working/layer_test?company_name=\" + this.state.company_name +\n            \"&position_name=\" + this.state.position_name + \"&location=\" + this.state.location\n        fetch(url)\n            .then(result => result.json())\n            .then(data => {\n                window.open(data, \"_blank\")\n                this.setState({ loading: false })\n            }) \n    }\n\n    \n\n\n    render() {\n        return (\n            <div>\n            <Form>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicCompany\">\n                    <Form.Label>Company Name</Form.Label>\n                    <Form.Control type=\"text\" name=\"company_name\" placeholder=\"E.g. Amazon Robotics\" onChange={this.changeHandler} />\n                    <Form.Text className=\"text-muted\">\n                        No information will be stored.</Form.Text>\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPosition\">\n                    <Form.Label>Position Name</Form.Label>\n                    <Form.Control type=\"Text\" name=\"position_name\" placeholder=\"E.g. SWE Intern, Food Taster\" onChange={this.changeHandler} />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasiclocation\">\n                    <Form.Label>Location</Form.Label>\n                        <Form.Control type=\"Text\" name=\"location\" placeholder=\"E.g. Cupertino, California\" onChange={this.changeHandler} />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n                    <Form.Check type=\"checkbox\" label=\"It is an internship\" />\n                </Form.Group>\n                </Form>\n                <Button variant=\"primary\" type=\"submit\" onClick={this.submitHandler}>Generate</Button>{' '}\n                <Button variant=\"danger\" type=\"submit\" onClick={this.wildSubmitHandler} >Wild Generate*</Button>{' '}\n                <Spinner style={this.state.loading ? {} : { display: 'none' }}\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"false\"\n                />\n                {/* {this.state.loading ? {}: {}} */}\n                <Form>\n                <Form.Text className=\"text-muted\">\n                        This may take a few seconds to generate a cover letter. <br/>\n                        * Wild Generate uses OpenAI's GPT-2 natural-language generation engine. It's still in development, and likely to output gibberish.\n                </Form.Text>\n                </Form>\n                \n                {console.log(\"[Message for myself] If this requests part doesn't work, and today is after Dec 31 2021, check Lambda Botocore. \")}\n            </div>\n        );\n    }\n}\n\nexport default myForm;","import React, { Component } from 'react';\nimport {Container, Row, Col} from 'react-bootstrap'\nimport styled from 'styled-components';\n\nimport Form from './Components/myForm';\n\nconst Title = styled.h1`\n  font-size: 2em;\n  text-align: center;\n`;\n\nclass CoverLetter extends Component {\n    componentDidMount() {\n        document.title = \"Cover Letter\"\n    }\n\n    render() {\n        return (\n            <Container>\n                <Row className=\"justify-content-md-center\">\n                    <Title>\n                        <p class=\"text-center\" id=\"wrong-test\">Cover Letter</p>\n                    </Title>\n                    <Col xs={8}>\n                    <Form/>\n                    </Col>\n                </Row>\n                \n            </Container>\n        );\n    }\n}\n\nexport default CoverLetter;","import React, { Component } from 'react';\nimport { Container, Row, Col, Nav } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n  padding: 1em;\n`;\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <Container fluid>\n                <Wrapper>\n                <Row>\n                    <Col>\n                        <Nav className=\"justify-content-center\" activeKey=\"/home\">\n                            <Nav.Item>\n                                <Nav.Link eventKey='disable' disabled >Jie Yang</Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link href=\"#/home\">\n                                    <span class=\"emoji\">🏗</span> Projects\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link href=\"#/resume\">\n                                    <span class=\"emoji\">📄</span> Résumé\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link href=\"#/coverletter\">\n                                    <span class=\"emoji\">✉️</span> Cover Letter\n                                </Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                    </Col>\n                </Row>\n                </Wrapper>\n            </Container>\n\n        );\n    }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport { Container } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n  padding: 3em;\n`;\n\nclass Footer extends Component {\n    render() { \n        return (\n            <Container>\n                <Wrapper>\n                </Wrapper>\n            </Container>\n\n\n        );\n    }\n}\n \nexport default Footer;","import React, { Component } from 'react';\nimport { Col, Row, Container, Spinner, Figure } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst Title = styled.h1`\n  font-size: 2em;\n  text-align: center;\n`;\n\n\nclass ProjectPage extends Component {\n    state = {\n        contentsData: {},\n        properties: {},\n        title: \"\",\n        what_it_is: \"\",\n        why_it_is_interesting: \"\",\n        figs: [],\n        docs: [],\n        loading: false,\n        pageID: this.props.location.pathname.replace('/projects/', '')\n    }\n\n    redirectURL = (oldURL) => {\n        // console.log('figs url', oldURL, oldURL.includes('githubpage.s3.us-east-2.amazonaws.com'));\n        return oldURL.replace('githubpage.s3.us-east-2.amazonaws.com', 'd3xdgu3rc17hb.cloudfront.net');\n    }\n\n    rearrangeArray = (array_name, array_url) => {\n        let res = []\n        for (let i = 0; i < array_name.length; i++) {\n            res.push(\n                {\n                    name: array_name[i],\n                    url: array_url[i]\n                }\n            )\n        }\n        return res\n    }\n\n    fetchContents = async () => {\n        const myHeaders = new Headers();\n        // myHeaders.append(\"Notion-Version\", \"2021-05-13\");\n        // myHeaders.append(\"Authorization\", \"Bearer secret_XqE3HGLH5teE1z1BF5PhKz0o10Kv8lVr7G0RcdrVTts\");\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        this.setState({ loading: true })\n\n        fetch(\"https://bgcomzqvsj.execute-api.us-east-2.amazonaws.com/Working/notion-project-list?pageID=\" + this.state.pageID, requestOptions)\n            .then(response => response.text())\n            .then(result => {\n                this.setState({ contentsData: JSON.parse(result) })\n                this.setState({ title: this.state.contentsData.properties.Name.title[0].plain_text })\n                this.setState({ what_it_is: this.state.contentsData.properties.what_it_is.rich_text[0].plain_text })\n                this.setState({ why_it_is_interesting: this.state.contentsData.properties.why_it_is_interesting.rich_text[0].plain_text })\n\n                let figures_name_arr = this.state.contentsData.properties.Figs.multi_select\n                figures_name_arr = figures_name_arr.map(obj => obj.name)\n                let figures_url_arr = this.state.contentsData.properties.Fig_url.multi_select\n                figures_url_arr = figures_url_arr.map(obj => obj.name)\n                let figs_arr = this.rearrangeArray(figures_name_arr, figures_url_arr)\n                this.setState({ figs: figs_arr })\n\n                let docs_name_arr = this.state.contentsData.properties.Docs.multi_select\n                docs_name_arr = docs_name_arr.map(obj => obj.name)\n                let docs_url_arr = this.state.contentsData.properties.Docs_url.multi_select\n                docs_url_arr = docs_url_arr.map(obj => obj.name)\n                let docs_arr = this.rearrangeArray(docs_name_arr, docs_url_arr)\n                this.setState({ docs: docs_arr })\n\n                this.setState({ loading: false })\n                console.log(this.props)\n            })\n            .catch(error => console.log('error', error));\n    }\n\n    componentDidMount() {\n        this.fetchContents()\n        document.title = (\"Projects\")\n    }\n\n    componentDidUpdate() {\n        if (this.state.title !== \"\") {\n            document.title = (this.state.title)\n        }\n    }\n\n\n    render() {\n        let Contents;\n\n        if (this.state.loading) {\n            Contents = (\n                <Col xs={8}>\n                    <Title>\n                        <p>Loading...</p>\n                        <Spinner animation=\"border\" size=\"lg\" />\n                    </Title>\n                </Col>\n            );\n\n        } else {\n            Contents = (\n                <Col xs={8} >\n                    <Title>\n                        <p>{this.state.title}</p>\n                    </Title>\n                    <h5> What it is? </h5>\n                    <p>\n                        {this.state.what_it_is}\n                    </p>\n                    <h5> Why it's interesting? </h5>\n                    <p> {this.state.why_it_is_interesting} </p>\n                    <br />\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs={8} className=\"justify-content-center\">\n                            {this.state.figs.map((obj, idx) => {\n                                this.redirectURL(obj.url);\n                                return (\n                                    <Figure >\n                                        <Figure.Image\n                                            // width={171}\n                                            // height={180}\n                                            alt=\"171180\"\n                                            src={this.redirectURL(obj.url)}\n                                        />\n                                        <Figure.Caption className=\"justify-content-md-center\">\n                                            Fig {idx + 1}. {obj.name}\n                                        </Figure.Caption>\n                                    </Figure>\n                                )\n                            }\n                            )}\n                        </Col>\n                    </Row>\n                    <h6>{this.state.docs.length === 0 ? 'No Documents Appended' : 'Technical Documents:'} </h6>\n                    <div class=\"list-group\">\n                        {this.state.docs.map((obj, idx) => (\n                            <a href={this.redirectURL(obj.url)} target=\"_blank\" rel=\"noreferrer\" class=\"list-group-item list-group-item-action\">{obj.name}</a>\n                        ))\n                        }\n                    </div>\n                </Col>\n            );\n        }\n\n\n        return (\n            <Container>\n                <Row className=\"justify-content-md-center\">\n                    {Contents}\n                </Row>\n            </Container>\n        );\n\n\n    }\n}\n\nexport default ProjectPage;","import React, { Component } from 'react';\nimport { Col, Row, Container } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst Title = styled.h1`\n  font-size: 2em;\n  text-align: center;\n`;\n\nclass Project_cfd extends Component {\n    state = {}\n    render() {\n        return (\n            <Container>\n                <Row className=\"justify-content-md-center\">\n                    <Title>\n                        <p>Empty page</p>\n                    </Title>\n                    <Col xs={8}>\n                        {/* <h5> What it is? </h5>\n                        <p>\n                            An industry term... is a type of technical terminology that has a particular meaning in a specific industry. It implies that a word or phrase is a typical one in a particular industry and people working in the respective industry or business will be familiar with and use the term.\"[22]\n                            <br />\n                            Technical terminology evolves due to the need for experts in a field to communicate with precision and brevity, but often has the effect of excluding those who are unfamiliar with the particular specialized language of the group. This can cause difficulties as, for example, when a patient is unable to follow the discussions of medical practitioners, and thus cannot understand his own condition and treatment. Differences in jargon also cause difficulties where professionals in related fields use different terms for the same phenomena.[\n                        </p>\n                        <h5> Why it's interesting? </h5>\n                        <p>\n                            \"An industry term... is a type of technical terminology that has a particular meaning in a specific industry. It implies that a word or phrase is a typical one in a particular industry and people working in the respective industry or business will be familiar with and use the term.\"[22]Technical terminology evolves due to the need for experts in a field to communicate with precision and brevity, but often has the effect of excluding those who are unfamiliar with the particular specialized language of the group. This can cause difficulties as, for example, when a patient is unable to follow the discussions of medical practitioners, and thus cannot understand his own condition and treatment. Differences in jargon also cause difficulties where professionals in related fields use different terms for the same phenomena.[\n                        </p>\n\n\n\n                        <div class=\"list-group\">\n                            <h6> Technical Documents: </h6>\n                            <a href=\"https://www.google.com\" target=\"_blank\" rel=\"noreferrer\" class=\"list-group-item list-group-item-action\">Report</a>\n                            <a href=\"https://www.google.com\" target=\"_blank\" rel=\"noreferrer\" class=\"list-group-item list-group-item-action\">Paper</a>\n                        </div> */}\n\n                    </Col>\n\n\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default Project_cfd;","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component } from \"react\";\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport Home from './Home';\nimport Resume from './Resume';\nimport CoverLetter from './CoverLetter';\nimport Navbar from './Components/Navbar';\nimport Footer from './Components/Footer';\n\nimport ProjectPage from './ProjectPage';\nimport NonePage from './NonePage';\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar />\n        <HashRouter basename=\"/\">\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/home\" component={Home} />\n            <Route exact path=\"/resume\" component={Resume} />\n            <Route exact path=\"/coverletter\" component={CoverLetter} />\n            <Route exact path=\"/projects/undefined\" component={NonePage} />\n            <Route path=\"/projects/\" component={ProjectPage} />\n          </Switch>\n        </HashRouter>\n        <Footer/>\n      </React.Fragment>\n    );\n\n  }\n}\n\nexport default App;\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}